import { LocalizationText, Srl } from '@sonolus/core';
import { Router } from 'express';
import multer from 'multer';
import { BackgroundItemModel } from '../models/items/background';
import { EffectItemModel } from '../models/items/effect';
import { EngineItemModel } from '../models/items/engine';
import { LevelItemModel } from '../models/items/level';
import { ParticleItemModel } from '../models/items/particle';
import { PlaylistItemModel } from '../models/items/playlist';
import { PostItemModel } from '../models/items/post';
import { ReplayItemModel } from '../models/items/replay';
import { RoomItemModel } from '../models/items/room';
import { SkinItemModel } from '../models/items/skin';
import { ServerFormsModel } from '../models/server/forms/form';
import { ServerOptionsModel } from '../models/server/options/option';
import { ServerAuthenticateHandler } from '../routes/authenticate';
import { ServerInfoHandler } from '../routes/info';
import { SonolusItemGroup, SonolusItemGroupOptions } from './itemGroup';
import { SonolusLevelResult, SonolusLevelResultOptions } from './levelResult';
import { SonolusMultiplayer } from './multiplayer';
import { SessionHandler } from './session';
export type UploadOptions = {
    options?: multer.Options;
    maxCount?: number;
};
export declare class Sonolus<TConfigurationOptions extends ServerOptionsModel = {}, TPostCreates extends ServerFormsModel = {}, TPlaylistCreates extends ServerFormsModel = {}, TLevelCreates extends ServerFormsModel = {}, TSkinCreates extends ServerFormsModel = {}, TBackgroundCreates extends ServerFormsModel = {}, TEffectCreates extends ServerFormsModel = {}, TParticleCreates extends ServerFormsModel = {}, TEngineCreates extends ServerFormsModel = {}, TReplayCreates extends ServerFormsModel = {}, TRoomCreates extends ServerFormsModel = {}, TPostSearches extends ServerFormsModel = {}, TPlaylistSearches extends ServerFormsModel = {}, TLevelSearches extends ServerFormsModel = {}, TSkinSearches extends ServerFormsModel = {}, TBackgroundSearches extends ServerFormsModel = {}, TEffectSearches extends ServerFormsModel = {}, TParticleSearches extends ServerFormsModel = {}, TEngineSearches extends ServerFormsModel = {}, TReplaySearches extends ServerFormsModel = {}, TRoomSearches extends ServerFormsModel = {}, TPostActions extends ServerFormsModel = {}, TPlaylistActions extends ServerFormsModel = {}, TLevelActions extends ServerFormsModel = {}, TSkinActions extends ServerFormsModel = {}, TBackgroundActions extends ServerFormsModel = {}, TEffectActions extends ServerFormsModel = {}, TParticleActions extends ServerFormsModel = {}, TEngineActions extends ServerFormsModel = {}, TReplayActions extends ServerFormsModel = {}, TRoomActions extends ServerFormsModel = {}, TPostCommunityActions extends ServerFormsModel = {}, TPlaylistCommunityActions extends ServerFormsModel = {}, TLevelCommunityActions extends ServerFormsModel = {}, TSkinCommunityActions extends ServerFormsModel = {}, TBackgroundCommunityActions extends ServerFormsModel = {}, TEffectCommunityActions extends ServerFormsModel = {}, TParticleCommunityActions extends ServerFormsModel = {}, TEngineCommunityActions extends ServerFormsModel = {}, TReplayCommunityActions extends ServerFormsModel = {}, TRoomCommunityActions extends ServerFormsModel = {}, TPostCommunityCommentActions extends ServerFormsModel = {}, TPlaylistCommunityCommentActions extends ServerFormsModel = {}, TLevelCommunityCommentActions extends ServerFormsModel = {}, TSkinCommunityCommentActions extends ServerFormsModel = {}, TBackgroundCommunityCommentActions extends ServerFormsModel = {}, TEffectCommunityCommentActions extends ServerFormsModel = {}, TParticleCommunityCommentActions extends ServerFormsModel = {}, TEngineCommunityCommentActions extends ServerFormsModel = {}, TReplayCommunityCommentActions extends ServerFormsModel = {}, TRoomCommunityCommentActions extends ServerFormsModel = {}, TLevelResultSubmits extends ServerFormsModel = {}> {
    readonly address?: string;
    readonly fallbackLocale: string;
    readonly configuration: {
        options: TConfigurationOptions;
    };
    readonly router: Router;
    title: LocalizationText;
    description?: LocalizationText;
    banner?: Srl;
    sessionHandler?: SessionHandler<TConfigurationOptions>;
    authenticateHandler?: ServerAuthenticateHandler<TConfigurationOptions>;
    serverInfoHandler: ServerInfoHandler<TConfigurationOptions>;
    readonly multiplayer: SonolusMultiplayer<TConfigurationOptions, TRoomCreates>;
    readonly levelResult: SonolusLevelResult<TConfigurationOptions, TLevelResultSubmits>;
    readonly post: SonolusItemGroup<TConfigurationOptions, PostItemModel, TPostCreates, TPostSearches, TPostActions, TPostCommunityActions, TPostCommunityCommentActions>;
    readonly playlist: SonolusItemGroup<TConfigurationOptions, PlaylistItemModel, TPlaylistCreates, TPlaylistSearches, TPlaylistActions, TPlaylistCommunityActions, TPlaylistCommunityCommentActions>;
    readonly level: SonolusItemGroup<TConfigurationOptions, LevelItemModel, TLevelCreates, TLevelSearches, TLevelActions, TLevelCommunityActions, TLevelCommunityCommentActions>;
    readonly skin: SonolusItemGroup<TConfigurationOptions, SkinItemModel, TSkinCreates, TSkinSearches, TSkinActions, TSkinCommunityActions, TSkinCommunityCommentActions>;
    readonly background: SonolusItemGroup<TConfigurationOptions, BackgroundItemModel, TBackgroundCreates, TBackgroundSearches, TBackgroundActions, TBackgroundCommunityActions, TBackgroundCommunityCommentActions>;
    readonly effect: SonolusItemGroup<TConfigurationOptions, EffectItemModel, TEffectCreates, TEffectSearches, TEffectActions, TEffectCommunityActions, TEffectCommunityCommentActions>;
    readonly particle: SonolusItemGroup<TConfigurationOptions, ParticleItemModel, TParticleCreates, TParticleSearches, TParticleActions, TParticleCommunityActions, TParticleCommunityCommentActions>;
    readonly engine: SonolusItemGroup<TConfigurationOptions, EngineItemModel, TEngineCreates, TEngineSearches, TEngineActions, TEngineCommunityActions, TEngineCommunityCommentActions>;
    readonly replay: SonolusItemGroup<TConfigurationOptions, ReplayItemModel, TReplayCreates, TReplaySearches, TReplayActions, TReplayCommunityActions, TReplayCommunityCommentActions>;
    readonly room: SonolusItemGroup<TConfigurationOptions, RoomItemModel, TRoomCreates, TRoomSearches, TRoomActions, TRoomCommunityActions, TRoomCommunityCommentActions>;
    constructor(options?: {
        address?: string;
        fallbackLocale?: string;
        configuration?: {
            options: TConfigurationOptions;
        };
        upload?: UploadOptions;
        post?: SonolusItemGroupOptions<TPostCreates, TPostSearches, TPostActions, TPostCommunityActions, TPostCommunityCommentActions>;
        playlist?: SonolusItemGroupOptions<TPlaylistCreates, TPlaylistSearches, TPlaylistActions, TPlaylistCommunityActions, TPlaylistCommunityCommentActions>;
        level?: SonolusItemGroupOptions<TLevelCreates, TLevelSearches, TLevelActions, TLevelCommunityActions, TLevelCommunityCommentActions>;
        skin?: SonolusItemGroupOptions<TSkinCreates, TSkinSearches, TSkinActions, TSkinCommunityActions, TSkinCommunityCommentActions>;
        background?: SonolusItemGroupOptions<TBackgroundCreates, TBackgroundSearches, TBackgroundActions, TBackgroundCommunityActions, TBackgroundCommunityCommentActions>;
        effect?: SonolusItemGroupOptions<TEffectCreates, TEffectSearches, TEffectActions, TEffectCommunityActions, TEffectCommunityCommentActions>;
        particle?: SonolusItemGroupOptions<TParticleCreates, TParticleSearches, TParticleActions, TParticleCommunityActions, TParticleCommunityCommentActions>;
        engine?: SonolusItemGroupOptions<TEngineCreates, TEngineSearches, TEngineActions, TEngineCommunityActions, TEngineCommunityCommentActions>;
        replay?: SonolusItemGroupOptions<TReplayCreates, TReplaySearches, TReplayActions, TReplayCommunityActions, TReplayCommunityCommentActions>;
        room?: SonolusItemGroupOptions<TRoomCreates, TRoomSearches, TRoomActions, TRoomCommunityActions, TRoomCommunityCommentActions>;
        levelResult?: SonolusLevelResultOptions<TLevelResultSubmits>;
    });
    load(path: string): void;
    add(data: Buffer | string, hash?: string): Srl;
    localize(text: LocalizationText, locale: string): string;
    private _installRoutes;
    private _get;
    private _post;
    private _upload;
    private _toMiddleware;
}
